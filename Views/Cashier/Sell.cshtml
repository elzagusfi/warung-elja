@model WarungElja.Models.CashierViewModel

@{
    ViewData["Title"] = "Sell Product";
}

<h1>Sell Product</h1>

<h4>Product: @Model.ProductName</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Sell">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="IdProductDetails" />
            <div class="form-group mb-3">
                <label class="control-label">Current Stock</label>
                <input asp-for="CurrentStock" class="form-control" readonly />
            </div>
            <div class="form-group mb-3">
                <label asp-for="SellQuantity" class="control-label"></label>
                <input asp-for="SellQuantity" class="form-control" />
                <span asp-validation-for="SellQuantity" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label class="control-label">Price per Unit</label>
                <input asp-for="Price" class="form-control" readonly />
            </div>
            <div class="form-group mb-3">
                <label class="control-label">Total</label>
                <input id="totalAmount" class="form-control" readonly />
            </div>
            <div class="form-group">
                <input type="submit" value="Sell" class="btn btn-success" />
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const quantityInput = document.getElementById('SellQuantity');
            const priceInput = document.getElementById('Price');
            const totalInput = document.getElementById('totalAmount');

            function calculateTotal() {
                const quantity = parseFloat(quantityInput.value) || 0;
                const price = parseFloat(priceInput.value) || 0;
                const total = quantity * price;
                totalInput.value = total.toFixed(2);
            }

            quantityInput.addEventListener('input', calculateTotal);
            priceInput.addEventListener('input', calculateTotal);
            
            // Calculate initial total
            calculateTotal();
        });
    </script>
}