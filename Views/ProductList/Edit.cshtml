@model WarungElja.Models.ProductDetails

@{
    ViewData["Title"] = "Edit Product";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Edit Product</h1>
</div>

<div class="row">
    <div class="col-md-8 col-lg-6">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">Product Details</h5>
            </div>
            <div class="card-body">
                <form asp-action="Edit">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="IdProductDetails" />
                    <div class="form-group mb-3">
                        <label asp-for="ProductName" class="form-label"></label>
                        <input asp-for="ProductName" class="form-control" readonly />
                        <span asp-validation-for="ProductName" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="Price" class="form-label"></label>
                        <div class="input-group">
                            <span class="input-group-text">Rp</span>
                            <input asp-for="Price" class="form-control" data-raw-value="@Model.Price.ToString("F2", System.Globalization.CultureInfo.InvariantCulture)" />
                        </div>
                        <span asp-validation-for="Price" class="text-danger"></span>
                    </div>
                    <input type="hidden" asp-for="Status" />
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-save"></i> Save Changes
                        </button>
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class="bi bi-arrow-left"></i> Back to List
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const priceInput = document.getElementById('Price');
            
            // Format number to Rupiah format
            function formatRupiah(angka) {
                let number_string = angka.replace(/[^,\d]/g, '').toString(),
                    split = number_string.split(','),
                    sisa = split[0].length % 3,
                    rupiah = split[0].substr(0, sisa),
                    ribuan = split[0].substr(sisa).match(/\d{3}/gi);
                
                // Tambahkan titik jika ribuan
                if (ribuan) {
                    let separator = sisa ? '.' : '';
                    rupiah += separator + ribuan.join('.');
                }
                
                rupiah = split[1] != undefined ? rupiah + ',' + split[1] : rupiah;
                return rupiah;
            }
            
            // Format nilai awal
            if (priceInput.value) {
                // Konversi nilai desimal ke format Rupiah
                let initialValue = parseFloat(priceInput.value).toFixed(2);
                priceInput.value = formatRupiah(initialValue);
            }
            
            priceInput.addEventListener('input', function(e) {
                // Simpan posisi kursor
                let start = e.target.selectionStart;
                let end = e.target.selectionEnd;
                
                // Hapus format sebelumnya
                let value = e.target.value.replace(/\./g, '').replace(',', '.');
                
                // Format ulang
                if (value) {
                    e.target.value = formatRupiah(value);
                }
                
                // Pertahankan posisi kursor
                e.target.setSelectionRange(start, end);
            });
            
            // Sebelum form disubmit, ubah ke format yang bisa dibaca server
            const form = priceInput.closest('form');
            if (form) {
                form.addEventListener('submit', function(e) {
                    let value = priceInput.value.replace(/\./g, '').replace(',', '.');
                    priceInput.value = value;
                });
            }
        });
    </script>
}